// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  roles     Role[]   // Array de roles
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relación con productos
  products  Product[]
}

model Product {
  id          String    @id @default(uuid())
  title       String
  description String
  price       Float
  stock       Int       @default(1)
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relación con el usuario (creador/vendedor)
  userId      String
  user        User      @relation(fields: [userId], references: [id])

  // Relación con imágenes
  images      ProductImage[]
}

model ProductImage {
  id        String   @id @default(uuid())
  url       String
  key       String   // Clave única en S3
  main      Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relación con el producto
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  // Esto asegura que solo puede haber una imagen principal por producto
  @@unique([productId, main], name: "uniqueMainImage")
}

enum Role {
  ADMIN
  CUSTOM
  PRODUCTOR
}
